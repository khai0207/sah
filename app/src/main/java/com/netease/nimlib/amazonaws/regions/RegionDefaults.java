package com.netease.nimlib.amazonaws.regions;

import com.netease.nimlib.amazonaws.services.s3.internal.Constants;
import java.util.ArrayList;
import java.util.List;
import java.util.Map;

/* loaded from: classes.dex */
class RegionDefaults {
    RegionDefaults() {
    }

    public static List<Region> getRegions() {
        ArrayList arrayList = new ArrayList();
        Region region = new Region("af-south-1", "amazonaws.com");
        arrayList.add(region);
        updateRegion(region, ServiceAbbreviations.Autoscaling, "autoscaling.af-south-1.amazonaws.com", false, true);
        updateRegion(region, ServiceAbbreviations.Dynamodb, "dynamodb.af-south-1.amazonaws.com", false, true);
        updateRegion(region, ServiceAbbreviations.EC2, "ec2.af-south-1.amazonaws.com", false, true);
        updateRegion(region, ServiceAbbreviations.ElasticLoadbalancing, "elasticloadbalancing.af-south-1.amazonaws.com", false, true);
        updateRegion(region, "kms", "kms.af-south-1.amazonaws.com", false, true);
        updateRegion(region, "lambda", "lambda.af-south-1.amazonaws.com", false, true);
        updateRegion(region, "logs", "logs.af-south-1.amazonaws.com", false, true);
        updateRegion(region, "s3", "s3.af-south-1.amazonaws.com", false, true);
        updateRegion(region, ServiceAbbreviations.SNS, "sns.af-south-1.amazonaws.com", false, true);
        updateRegion(region, ServiceAbbreviations.SQS, "sqs.af-south-1.amazonaws.com", false, true);
        updateRegion(region, ServiceAbbreviations.STS, "sts.af-south-1.amazonaws.com", false, true);
        Region region2 = new Region("ap-northeast-1", "amazonaws.com");
        arrayList.add(region2);
        updateRegion(region2, ServiceAbbreviations.Autoscaling, "autoscaling.ap-northeast-1.amazonaws.com", false, true);
        updateRegion(region2, "cognito-identity", "cognito-identity.ap-northeast-1.amazonaws.com", false, true);
        updateRegion(region2, "cognito-idp", "cognito-idp.ap-northeast-1.amazonaws.com", false, true);
        updateRegion(region2, "cognito-sync", "cognito-sync.ap-northeast-1.amazonaws.com", false, true);
        updateRegion(region2, "data.iot", "data.iot.ap-northeast-1.amazonaws.com", false, true);
        updateRegion(region2, ServiceAbbreviations.Dynamodb, "dynamodb.ap-northeast-1.amazonaws.com", false, true);
        updateRegion(region2, ServiceAbbreviations.EC2, "ec2.ap-northeast-1.amazonaws.com", false, true);
        updateRegion(region2, ServiceAbbreviations.ElasticLoadbalancing, "elasticloadbalancing.ap-northeast-1.amazonaws.com", false, true);
        updateRegion(region2, "firehose", "firehose.ap-northeast-1.amazonaws.com", false, true);
        updateRegion(region2, "iot", "iot.ap-northeast-1.amazonaws.com", false, true);
        updateRegion(region2, "kinesis", "kinesis.ap-northeast-1.amazonaws.com", false, true);
        updateRegion(region2, "kms", "kms.ap-northeast-1.amazonaws.com", false, true);
        updateRegion(region2, "lambda", "lambda.ap-northeast-1.amazonaws.com", false, true);
        updateRegion(region2, "logs", "logs.ap-northeast-1.amazonaws.com", false, true);
        updateRegion(region2, "polly", "polly.ap-northeast-1.amazonaws.com", false, true);
        updateRegion(region2, "s3", "s3.ap-northeast-1.amazonaws.com", false, true);
        updateRegion(region2, ServiceAbbreviations.SimpleDB, "sdb.ap-northeast-1.amazonaws.com", false, true);
        updateRegion(region2, ServiceAbbreviations.SNS, "sns.ap-northeast-1.amazonaws.com", false, true);
        updateRegion(region2, ServiceAbbreviations.SQS, "sqs.ap-northeast-1.amazonaws.com", false, true);
        updateRegion(region2, ServiceAbbreviations.STS, "sts.ap-northeast-1.amazonaws.com", false, true);
        Region region3 = new Region("ap-northeast-2", "amazonaws.com");
        arrayList.add(region3);
        updateRegion(region3, ServiceAbbreviations.Autoscaling, "autoscaling.ap-northeast-2.amazonaws.com", false, true);
        updateRegion(region3, "cognito-identity", "cognito-identity.ap-northeast-2.amazonaws.com", false, true);
        updateRegion(region3, "cognito-idp", "cognito-idp.ap-northeast-2.amazonaws.com", false, true);
        updateRegion(region3, "cognito-sync", "cognito-sync.ap-northeast-2.amazonaws.com", false, true);
        updateRegion(region3, "data.iot", "data.iot.ap-northeast-2.amazonaws.com", false, true);
        updateRegion(region3, ServiceAbbreviations.Dynamodb, "dynamodb.ap-northeast-2.amazonaws.com", false, true);
        updateRegion(region3, ServiceAbbreviations.EC2, "ec2.ap-northeast-2.amazonaws.com", false, true);
        updateRegion(region3, ServiceAbbreviations.ElasticLoadbalancing, "elasticloadbalancing.ap-northeast-2.amazonaws.com", false, true);
        updateRegion(region3, "iot", "iot.ap-northeast-2.amazonaws.com", false, true);
        updateRegion(region3, "kinesis", "kinesis.ap-northeast-2.amazonaws.com", false, true);
        updateRegion(region3, "kms", "kms.ap-northeast-2.amazonaws.com", false, true);
        updateRegion(region3, "lambda", "lambda.ap-northeast-2.amazonaws.com", false, true);
        updateRegion(region3, "logs", "logs.ap-northeast-2.amazonaws.com", false, true);
        updateRegion(region3, "polly", "polly.ap-northeast-2.amazonaws.com", false, true);
        updateRegion(region3, "s3", "s3.ap-northeast-2.amazonaws.com", false, true);
        updateRegion(region3, ServiceAbbreviations.SNS, "sns.ap-northeast-2.amazonaws.com", false, true);
        updateRegion(region3, ServiceAbbreviations.SQS, "sqs.ap-northeast-2.amazonaws.com", false, true);
        updateRegion(region3, ServiceAbbreviations.STS, "sts.ap-northeast-2.amazonaws.com", false, true);
        Region region4 = new Region("ap-south-1", "amazonaws.com");
        arrayList.add(region4);
        updateRegion(region4, ServiceAbbreviations.Autoscaling, "autoscaling.ap-south-1.amazonaws.com", false, true);
        updateRegion(region4, "cognito-identity", "cognito-identity.ap-south-1.amazonaws.com", false, true);
        updateRegion(region4, "cognito-idp", "cognito-idp.ap-south-1.amazonaws.com", false, true);
        updateRegion(region4, "cognito-sync", "cognito-sync.ap-south-1.amazonaws.com", false, true);
        updateRegion(region4, ServiceAbbreviations.Dynamodb, "dynamodb.ap-south-1.amazonaws.com", false, true);
        updateRegion(region4, ServiceAbbreviations.EC2, "ec2.ap-south-1.amazonaws.com", false, true);
        updateRegion(region4, ServiceAbbreviations.ElasticLoadbalancing, "elasticloadbalancing.ap-south-1.amazonaws.com", false, true);
        updateRegion(region4, "kinesis", "kinesis.ap-south-1.amazonaws.com", false, true);
        updateRegion(region4, "kms", "kms.ap-south-1.amazonaws.com", false, true);
        updateRegion(region4, "lambda", "lambda.ap-south-1.amazonaws.com", false, true);
        updateRegion(region4, "logs", "logs.ap-south-1.amazonaws.com", false, true);
        updateRegion(region4, "polly", "polly.ap-south-1.amazonaws.com", false, true);
        updateRegion(region4, "s3", "s3.ap-south-1.amazonaws.com", false, true);
        updateRegion(region4, ServiceAbbreviations.SNS, "sns.ap-south-1.amazonaws.com", false, true);
        updateRegion(region4, ServiceAbbreviations.SQS, "sqs.ap-south-1.amazonaws.com", false, true);
        updateRegion(region4, ServiceAbbreviations.STS, "sts.ap-south-1.amazonaws.com", false, true);
        Region region5 = new Region("ap-southeast-1", "amazonaws.com");
        arrayList.add(region5);
        updateRegion(region5, ServiceAbbreviations.Autoscaling, "autoscaling.ap-southeast-1.amazonaws.com", false, true);
        updateRegion(region5, "cognito-identity", "cognito-identity.ap-southeast-1.amazonaws.com", false, true);
        updateRegion(region5, "cognito-idp", "cognito-idp.ap-southeast-1.amazonaws.com", false, true);
        updateRegion(region5, "cognito-sync", "cognito-sync.ap-southeast-1.amazonaws.com", false, true);
        updateRegion(region5, "data.iot", "data.iot.ap-southeast-1.amazonaws.com", false, true);
        updateRegion(region5, ServiceAbbreviations.Dynamodb, "dynamodb.ap-southeast-1.amazonaws.com", false, true);
        updateRegion(region5, ServiceAbbreviations.EC2, "ec2.ap-southeast-1.amazonaws.com", false, true);
        updateRegion(region5, ServiceAbbreviations.ElasticLoadbalancing, "elasticloadbalancing.ap-southeast-1.amazonaws.com", false, true);
        updateRegion(region5, "iot", "iot.ap-southeast-1.amazonaws.com", false, true);
        updateRegion(region5, "kinesis", "kinesis.ap-southeast-1.amazonaws.com", false, true);
        updateRegion(region5, "kms", "kms.ap-southeast-1.amazonaws.com", false, true);
        updateRegion(region5, "lambda", "lambda.ap-southeast-1.amazonaws.com", false, true);
        updateRegion(region5, "logs", "logs.ap-southeast-1.amazonaws.com", false, true);
        updateRegion(region5, "polly", "polly.ap-southeast-1.amazonaws.com", false, true);
        updateRegion(region5, "s3", "s3.ap-southeast-1.amazonaws.com", false, true);
        updateRegion(region5, ServiceAbbreviations.SimpleDB, "sdb.ap-southeast-1.amazonaws.com", false, true);
        updateRegion(region5, ServiceAbbreviations.SNS, "sns.ap-southeast-1.amazonaws.com", false, true);
        updateRegion(region5, ServiceAbbreviations.SQS, "sqs.ap-southeast-1.amazonaws.com", false, true);
        updateRegion(region5, ServiceAbbreviations.STS, "sts.ap-southeast-1.amazonaws.com", false, true);
        Region region6 = new Region("ap-southeast-2", "amazonaws.com");
        arrayList.add(region6);
        updateRegion(region6, ServiceAbbreviations.Autoscaling, "autoscaling.ap-southeast-2.amazonaws.com", false, true);
        updateRegion(region6, "cognito-identity", "cognito-identity.ap-southeast-2.amazonaws.com", false, true);
        updateRegion(region6, "cognito-idp", "cognito-idp.ap-southeast-2.amazonaws.com", false, true);
        updateRegion(region6, "cognito-sync", "cognito-sync.ap-southeast-2.amazonaws.com", false, true);
        updateRegion(region6, "data.iot", "data.iot.ap-southeast-2.amazonaws.com", false, true);
        updateRegion(region6, ServiceAbbreviations.Dynamodb, "dynamodb.ap-southeast-2.amazonaws.com", false, true);
        updateRegion(region6, ServiceAbbreviations.EC2, "ec2.ap-southeast-2.amazonaws.com", false, true);
        updateRegion(region6, ServiceAbbreviations.ElasticLoadbalancing, "elasticloadbalancing.ap-southeast-2.amazonaws.com", false, true);
        updateRegion(region6, "iot", "iot.ap-southeast-2.amazonaws.com", false, true);
        updateRegion(region6, "kinesis", "kinesis.ap-southeast-2.amazonaws.com", false, true);
        updateRegion(region6, "kms", "kms.ap-southeast-2.amazonaws.com", false, true);
        updateRegion(region6, "lambda", "lambda.ap-southeast-2.amazonaws.com", false, true);
        updateRegion(region6, "logs", "logs.ap-southeast-2.amazonaws.com", false, true);
        updateRegion(region6, "polly", "polly.ap-southeast-2.amazonaws.com", false, true);
        updateRegion(region6, "s3", "s3.ap-southeast-2.amazonaws.com", false, true);
        updateRegion(region6, ServiceAbbreviations.SimpleDB, "sdb.ap-southeast-2.amazonaws.com", false, true);
        updateRegion(region6, ServiceAbbreviations.SNS, "sns.ap-southeast-2.amazonaws.com", false, true);
        updateRegion(region6, ServiceAbbreviations.SQS, "sqs.ap-southeast-2.amazonaws.com", false, true);
        updateRegion(region6, ServiceAbbreviations.STS, "sts.ap-southeast-2.amazonaws.com", false, true);
        Region region7 = new Region("ca-central-1", "amazonaws.com");
        arrayList.add(region7);
        updateRegion(region7, ServiceAbbreviations.Autoscaling, "autoscaling.ca-central-1.amazonaws.com", false, true);
        updateRegion(region7, ServiceAbbreviations.Dynamodb, "dynamodb.ca-central-1.amazonaws.com", false, true);
        updateRegion(region7, ServiceAbbreviations.EC2, "ec2.ca-central-1.amazonaws.com", false, true);
        updateRegion(region7, ServiceAbbreviations.ElasticLoadbalancing, "elasticloadbalancing.ca-central-1.amazonaws.com", false, true);
        updateRegion(region7, "kinesis", "kinesis.ca-central-1.amazonaws.com", false, true);
        updateRegion(region7, "kms", "kms.ca-central-1.amazonaws.com", false, true);
        updateRegion(region7, "lambda", "lambda.ca-central-1.amazonaws.com", false, true);
        updateRegion(region7, "logs", "logs.ca-central-1.amazonaws.com", false, true);
        updateRegion(region7, "polly", "polly.ca-central-1.amazonaws.com", false, true);
        updateRegion(region7, "s3", "s3.ca-central-1.amazonaws.com", false, true);
        updateRegion(region7, ServiceAbbreviations.SNS, "sns.ca-central-1.amazonaws.com", false, true);
        updateRegion(region7, ServiceAbbreviations.SQS, "sqs.ca-central-1.amazonaws.com", false, true);
        updateRegion(region7, ServiceAbbreviations.STS, "sts.ca-central-1.amazonaws.com", false, true);
        Region region8 = new Region("eu-central-1", "amazonaws.com");
        arrayList.add(region8);
        updateRegion(region8, ServiceAbbreviations.Autoscaling, "autoscaling.eu-central-1.amazonaws.com", false, true);
        updateRegion(region8, "cognito-identity", "cognito-identity.eu-central-1.amazonaws.com", false, true);
        updateRegion(region8, "cognito-idp", "cognito-idp.eu-central-1.amazonaws.com", false, true);
        updateRegion(region8, "cognito-sync", "cognito-sync.eu-central-1.amazonaws.com", false, true);
        updateRegion(region8, "data.iot", "data.iot.eu-central-1.amazonaws.com", false, true);
        updateRegion(region8, ServiceAbbreviations.Dynamodb, "dynamodb.eu-central-1.amazonaws.com", false, true);
        updateRegion(region8, ServiceAbbreviations.EC2, "ec2.eu-central-1.amazonaws.com", false, true);
        updateRegion(region8, ServiceAbbreviations.ElasticLoadbalancing, "elasticloadbalancing.eu-central-1.amazonaws.com", false, true);
        updateRegion(region8, "firehose", "firehose.eu-central-1.amazonaws.com", false, true);
        updateRegion(region8, "iot", "iot.eu-central-1.amazonaws.com", false, true);
        updateRegion(region8, "kinesis", "kinesis.eu-central-1.amazonaws.com", false, true);
        updateRegion(region8, "kms", "kms.eu-central-1.amazonaws.com", false, true);
        updateRegion(region8, "lambda", "lambda.eu-central-1.amazonaws.com", false, true);
        updateRegion(region8, "logs", "logs.eu-central-1.amazonaws.com", false, true);
        updateRegion(region8, "polly", "polly.eu-central-1.amazonaws.com", false, true);
        updateRegion(region8, "s3", "s3.eu-central-1.amazonaws.com", false, true);
        updateRegion(region8, ServiceAbbreviations.SNS, "sns.eu-central-1.amazonaws.com", false, true);
        updateRegion(region8, ServiceAbbreviations.SQS, "sqs.eu-central-1.amazonaws.com", false, true);
        updateRegion(region8, ServiceAbbreviations.STS, "sts.eu-central-1.amazonaws.com", false, true);
        Region region9 = new Region("eu-central-2", "amazonaws.com");
        arrayList.add(region9);
        updateRegion(region9, ServiceAbbreviations.Autoscaling, "autoscaling.eu-central-2.amazonaws.com", false, true);
        updateRegion(region9, "cognito-identity", "cognito-identity.eu-central-2.amazonaws.com", false, true);
        updateRegion(region9, "cognito-idp", "cognito-idp.eu-central-2.amazonaws.com", false, true);
        updateRegion(region9, "cognito-sync", "cognito-sync.eu-central-2.amazonaws.com", false, true);
        updateRegion(region9, "data.iot", "data.iot.eu-central-2.amazonaws.com", false, true);
        updateRegion(region9, ServiceAbbreviations.Dynamodb, "dynamodb.eu-central-2.amazonaws.com", false, true);
        updateRegion(region9, ServiceAbbreviations.EC2, "ec2.eu-central-2.amazonaws.com", false, true);
        updateRegion(region9, ServiceAbbreviations.ElasticLoadbalancing, "elasticloadbalancing.eu-central-2.amazonaws.com", false, true);
        updateRegion(region9, "firehose", "firehose.eu-central-2.amazonaws.com", false, true);
        updateRegion(region9, "iot", "iot.eu-central-2.amazonaws.com", false, true);
        updateRegion(region9, "kinesis", "kinesis.eu-central-2.amazonaws.com", false, true);
        updateRegion(region9, "kms", "kms.eu-central-2.amazonaws.com", false, true);
        updateRegion(region9, "lambda", "lambda.eu-central-2.amazonaws.com", false, true);
        updateRegion(region9, "logs", "logs.eu-central-2.amazonaws.com", false, true);
        updateRegion(region9, "polly", "polly.eu-central-2.amazonaws.com", false, true);
        updateRegion(region9, "s3", "s3.eu-central-2.amazonaws.com", false, true);
        updateRegion(region9, ServiceAbbreviations.SimpleDB, "sdb.eu-central-2.amazonaws.com", false, true);
        updateRegion(region9, ServiceAbbreviations.SNS, "sns.eu-central-2.amazonaws.com", false, true);
        updateRegion(region9, ServiceAbbreviations.SQS, "sqs.eu-central-2.amazonaws.com", false, true);
        updateRegion(region9, ServiceAbbreviations.STS, "sts.eu-central-2.amazonaws.com", false, true);
        Region region10 = new Region("eu-south-1", "amazonaws.com");
        arrayList.add(region10);
        updateRegion(region10, ServiceAbbreviations.Autoscaling, "autoscaling.eu-south-1.amazonaws.com", false, true);
        updateRegion(region10, ServiceAbbreviations.Dynamodb, "dynamodb.eu-south-1.amazonaws.com", false, true);
        updateRegion(region10, ServiceAbbreviations.EC2, "ec2.eu-south-1.amazonaws.com", false, true);
        updateRegion(region10, ServiceAbbreviations.ElasticLoadbalancing, "elasticloadbalancing.eu-south-1.amazonaws.com", false, true);
        updateRegion(region10, "lambda", "lambda.eu-south-1.amazonaws.com", false, true);
        updateRegion(region10, "logs", "logs.eu-south-1.amazonaws.com", false, true);
        updateRegion(region10, "s3", "s3.eu-south-1.amazonaws.com", false, true);
        updateRegion(region10, ServiceAbbreviations.SNS, "sns.eu-south-1.amazonaws.com", false, true);
        updateRegion(region10, ServiceAbbreviations.SQS, "sqs.eu-south-1.amazonaws.com", false, true);
        updateRegion(region10, ServiceAbbreviations.STS, "sts.eu-south-1.amazonaws.com", false, true);
        Region region11 = new Region("eu-south-2", "amazonaws.com");
        arrayList.add(region11);
        updateRegion(region11, ServiceAbbreviations.Autoscaling, "autoscaling.eu-south-2.amazonaws.com", false, true);
        updateRegion(region11, "cognito-identity", "cognito-identity.eu-south-2.amazonaws.com", false, true);
        updateRegion(region11, "cognito-idp", "cognito-idp.eu-south-2.amazonaws.com", false, true);
        updateRegion(region11, "cognito-sync", "cognito-sync.eu-south-2.amazonaws.com", false, true);
        updateRegion(region11, "data.iot", "data.iot.eu-south-2.amazonaws.com", false, true);
        updateRegion(region11, ServiceAbbreviations.Dynamodb, "dynamodb.eu-south-2.amazonaws.com", false, true);
        updateRegion(region11, ServiceAbbreviations.EC2, "ec2.eu-south-2.amazonaws.com", false, true);
        updateRegion(region11, ServiceAbbreviations.ElasticLoadbalancing, "elasticloadbalancing.eu-south-2.amazonaws.com", false, true);
        updateRegion(region11, "firehose", "firehose.eu-south-2.amazonaws.com", false, true);
        updateRegion(region11, "iot", "iot.eu-south-2.amazonaws.com", false, true);
        updateRegion(region11, "kinesis", "kinesis.eu-south-2.amazonaws.com", false, true);
        updateRegion(region11, "kms", "kms.eu-south-2.amazonaws.com", false, true);
        updateRegion(region11, "lambda", "lambda.eu-south-2.amazonaws.com", false, true);
        updateRegion(region11, "logs", "logs.eu-south-2.amazonaws.com", false, true);
        updateRegion(region11, "polly", "polly.eu-south-2.amazonaws.com", false, true);
        updateRegion(region11, "s3", "s3.eu-south-2.amazonaws.com", false, true);
        updateRegion(region11, ServiceAbbreviations.SimpleDB, "sdb.eu-south-2.amazonaws.com", false, true);
        updateRegion(region11, ServiceAbbreviations.SNS, "sns.eu-south-2.amazonaws.com", false, true);
        updateRegion(region11, ServiceAbbreviations.SQS, "sqs.eu-south-2.amazonaws.com", false, true);
        updateRegion(region11, ServiceAbbreviations.STS, "sts.eu-south-2.amazonaws.com", false, true);
        Region region12 = new Region("eu-west-1", "amazonaws.com");
        arrayList.add(region12);
        updateRegion(region12, ServiceAbbreviations.Autoscaling, "autoscaling.eu-west-1.amazonaws.com", false, true);
        updateRegion(region12, "cognito-identity", "cognito-identity.eu-west-1.amazonaws.com", false, true);
        updateRegion(region12, "cognito-idp", "cognito-idp.eu-west-1.amazonaws.com", false, true);
        updateRegion(region12, "cognito-sync", "cognito-sync.eu-west-1.amazonaws.com", false, true);
        updateRegion(region12, "data.iot", "data.iot.eu-west-1.amazonaws.com", false, true);
        updateRegion(region12, ServiceAbbreviations.Dynamodb, "dynamodb.eu-west-1.amazonaws.com", false, true);
        updateRegion(region12, ServiceAbbreviations.EC2, "ec2.eu-west-1.amazonaws.com", false, true);
        updateRegion(region12, ServiceAbbreviations.ElasticLoadbalancing, "elasticloadbalancing.eu-west-1.amazonaws.com", false, true);
        updateRegion(region12, "email", "email.eu-west-1.amazonaws.com", false, true);
        updateRegion(region12, "firehose", "firehose.eu-west-1.amazonaws.com", false, true);
        updateRegion(region12, "iot", "iot.eu-west-1.amazonaws.com", false, true);
        updateRegion(region12, "kinesis", "kinesis.eu-west-1.amazonaws.com", false, true);
        updateRegion(region12, "kms", "kms.eu-west-1.amazonaws.com", false, true);
        updateRegion(region12, "lambda", "lambda.eu-west-1.amazonaws.com", false, true);
        updateRegion(region12, "logs", "logs.eu-west-1.amazonaws.com", false, true);
        updateRegion(region12, "machinelearning", "machinelearning.eu-west-1.amazonaws.com", false, true);
        updateRegion(region12, "polly", "polly.eu-west-1.amazonaws.com", false, true);
        updateRegion(region12, "rekognition", "rekognition.eu-west-1.amazonaws.com", false, true);
        updateRegion(region12, "s3", "s3.eu-west-1.amazonaws.com", false, true);
        updateRegion(region12, ServiceAbbreviations.SimpleDB, "sdb.eu-west-1.amazonaws.com", false, true);
        updateRegion(region12, ServiceAbbreviations.SNS, "sns.eu-west-1.amazonaws.com", false, true);
        updateRegion(region12, ServiceAbbreviations.SQS, "sqs.eu-west-1.amazonaws.com", false, true);
        updateRegion(region12, ServiceAbbreviations.STS, "sts.eu-west-1.amazonaws.com", false, true);
        Region region13 = new Region("eu-west-2", "amazonaws.com");
        arrayList.add(region13);
        updateRegion(region13, ServiceAbbreviations.Autoscaling, "autoscaling.eu-west-2.amazonaws.com", false, true);
        updateRegion(region13, "cognito-identity", "cognito-identity.eu-west-2.amazonaws.com", false, true);
        updateRegion(region13, "cognito-idp", "cognito-idp.eu-west-2.amazonaws.com", false, true);
        updateRegion(region13, "cognito-sync", "cognito-sync.eu-west-2.amazonaws.com", false, true);
        updateRegion(region13, ServiceAbbreviations.Dynamodb, "dynamodb.eu-west-2.amazonaws.com", false, true);
        updateRegion(region13, ServiceAbbreviations.EC2, "ec2.eu-west-2.amazonaws.com", false, true);
        updateRegion(region13, ServiceAbbreviations.ElasticLoadbalancing, "elasticloadbalancing.eu-west-2.amazonaws.com", false, true);
        updateRegion(region13, "iot", "iot.eu-west-2.amazonaws.com", false, true);
        updateRegion(region13, "kinesis", "kinesis.eu-west-2.amazonaws.com", false, true);
        updateRegion(region13, "kms", "kms.eu-west-2.amazonaws.com", false, true);
        updateRegion(region13, "lambda", "lambda.eu-west-2.amazonaws.com", false, true);
        updateRegion(region13, "logs", "logs.eu-west-2.amazonaws.com", false, true);
        updateRegion(region13, "polly", "polly.eu-west-2.amazonaws.com", false, true);
        updateRegion(region13, "s3", "s3.eu-west-2.amazonaws.com", false, true);
        updateRegion(region13, ServiceAbbreviations.SNS, "sns.eu-west-2.amazonaws.com", false, true);
        updateRegion(region13, ServiceAbbreviations.SQS, "sqs.eu-west-2.amazonaws.com", false, true);
        updateRegion(region13, ServiceAbbreviations.STS, "sts.eu-west-2.amazonaws.com", false, true);
        Region region14 = new Region("eu-west-3", "amazonaws.com");
        arrayList.add(region14);
        updateRegion(region14, ServiceAbbreviations.Autoscaling, "autoscaling.eu-west-3.amazonaws.com", false, true);
        updateRegion(region14, ServiceAbbreviations.Dynamodb, "dynamodb.eu-west-3.amazonaws.com", false, true);
        updateRegion(region14, ServiceAbbreviations.EC2, "ec2.eu-west-3.amazonaws.com", false, true);
        updateRegion(region14, ServiceAbbreviations.ElasticLoadbalancing, "elasticloadbalancing.eu-west-3.amazonaws.com", false, true);
        updateRegion(region14, "kinesis", "kinesis.eu-west-3.amazonaws.com", false, true);
        updateRegion(region14, "kms", "kms.eu-west-3.amazonaws.com", false, true);
        updateRegion(region14, "lambda", "lambda.eu-west-3.amazonaws.com", false, true);
        updateRegion(region14, "logs", "logs.eu-west-3.amazonaws.com", false, true);
        updateRegion(region14, "polly", "polly.eu-west-3.amazonaws.com", false, true);
        updateRegion(region14, "s3", "s3.eu-west-3.amazonaws.com", false, true);
        updateRegion(region14, ServiceAbbreviations.SNS, "sns.eu-west-3.amazonaws.com", false, true);
        updateRegion(region14, ServiceAbbreviations.SQS, "sqs.eu-west-3.amazonaws.com", false, true);
        updateRegion(region14, ServiceAbbreviations.STS, "sts.eu-west-3.amazonaws.com", false, true);
        Region region15 = new Region("sa-east-1", "amazonaws.com");
        arrayList.add(region15);
        updateRegion(region15, ServiceAbbreviations.Autoscaling, "autoscaling.sa-east-1.amazonaws.com", false, true);
        updateRegion(region15, ServiceAbbreviations.Dynamodb, "dynamodb.sa-east-1.amazonaws.com", false, true);
        updateRegion(region15, ServiceAbbreviations.EC2, "ec2.sa-east-1.amazonaws.com", false, true);
        updateRegion(region15, ServiceAbbreviations.ElasticLoadbalancing, "elasticloadbalancing.sa-east-1.amazonaws.com", false, true);
        updateRegion(region15, "kinesis", "kinesis.sa-east-1.amazonaws.com", false, true);
        updateRegion(region15, "kms", "kms.sa-east-1.amazonaws.com", false, true);
        updateRegion(region15, "lambda", "lambda.sa-east-1.amazonaws.com", false, true);
        updateRegion(region15, "logs", "logs.sa-east-1.amazonaws.com", false, true);
        updateRegion(region15, "polly", "polly.sa-east-1.amazonaws.com", false, true);
        updateRegion(region15, "s3", "s3.sa-east-1.amazonaws.com", false, true);
        updateRegion(region15, ServiceAbbreviations.SimpleDB, "sdb.sa-east-1.amazonaws.com", false, true);
        updateRegion(region15, ServiceAbbreviations.SNS, "sns.sa-east-1.amazonaws.com", false, true);
        updateRegion(region15, ServiceAbbreviations.SQS, "sqs.sa-east-1.amazonaws.com", false, true);
        updateRegion(region15, ServiceAbbreviations.STS, "sts.sa-east-1.amazonaws.com", false, true);
        Region region16 = new Region("us-east-1", "amazonaws.com");
        arrayList.add(region16);
        updateRegion(region16, ServiceAbbreviations.Autoscaling, "autoscaling.us-east-1.amazonaws.com", false, true);
        updateRegion(region16, "cognito-identity", "cognito-identity.us-east-1.amazonaws.com", false, true);
        updateRegion(region16, "cognito-idp", "cognito-idp.us-east-1.amazonaws.com", false, true);
        updateRegion(region16, "cognito-sync", "cognito-sync.us-east-1.amazonaws.com", false, true);
        updateRegion(region16, "data.iot", "data.iot.us-east-1.amazonaws.com", false, true);
        updateRegion(region16, ServiceAbbreviations.Dynamodb, "dynamodb.us-east-1.amazonaws.com", false, true);
        updateRegion(region16, ServiceAbbreviations.EC2, "ec2.us-east-1.amazonaws.com", false, true);
        updateRegion(region16, ServiceAbbreviations.ElasticLoadbalancing, "elasticloadbalancing.us-east-1.amazonaws.com", false, true);
        updateRegion(region16, "email", "email.us-east-1.amazonaws.com", false, true);
        updateRegion(region16, "firehose", "firehose.us-east-1.amazonaws.com", false, true);
        updateRegion(region16, "iot", "iot.us-east-1.amazonaws.com", false, true);
        updateRegion(region16, "kinesis", "kinesis.us-east-1.amazonaws.com", false, true);
        updateRegion(region16, "kms", "kms.us-east-1.amazonaws.com", false, true);
        updateRegion(region16, "lambda", "lambda.us-east-1.amazonaws.com", false, true);
        updateRegion(region16, "logs", "logs.us-east-1.amazonaws.com", false, true);
        updateRegion(region16, "machinelearning", "machinelearning.us-east-1.amazonaws.com", false, true);
        updateRegion(region16, "mobileanalytics", "mobileanalytics.us-east-1.amazonaws.com", false, true);
        updateRegion(region16, "pinpoint", "pinpoint.us-east-1.amazonaws.com", false, true);
        updateRegion(region16, "polly", "polly.us-east-1.amazonaws.com", false, true);
        updateRegion(region16, "rekognition", "rekognition.us-east-1.amazonaws.com", false, true);
        updateRegion(region16, "s3", Constants.S3_HOSTNAME, false, true);
        updateRegion(region16, ServiceAbbreviations.SimpleDB, "sdb.amazonaws.com", false, true);
        updateRegion(region16, ServiceAbbreviations.SNS, "sns.us-east-1.amazonaws.com", false, true);
        updateRegion(region16, ServiceAbbreviations.SQS, "sqs.us-east-1.amazonaws.com", false, true);
        updateRegion(region16, ServiceAbbreviations.STS, "sts.us-east-1.amazonaws.com", false, true);
        Region region17 = new Region("us-east-2", "amazonaws.com");
        arrayList.add(region17);
        updateRegion(region17, ServiceAbbreviations.Autoscaling, "autoscaling.us-east-2.amazonaws.com", false, true);
        updateRegion(region17, "cognito-identity", "cognito-identity.us-east-2.amazonaws.com", false, true);
        updateRegion(region17, "cognito-idp", "cognito-idp.us-east-2.amazonaws.com", false, true);
        updateRegion(region17, "cognito-sync", "cognito-sync.us-east-2.amazonaws.com", false, true);
        updateRegion(region17, ServiceAbbreviations.Dynamodb, "dynamodb.us-east-2.amazonaws.com", false, true);
        updateRegion(region17, ServiceAbbreviations.EC2, "ec2.us-east-2.amazonaws.com", false, true);
        updateRegion(region17, ServiceAbbreviations.ElasticLoadbalancing, "elasticloadbalancing.us-east-2.amazonaws.com", false, true);
        updateRegion(region17, "firehose", "firehose.us-east-2.amazonaws.com", false, true);
        updateRegion(region17, "iot", "iot.us-east-2.amazonaws.com", false, true);
        updateRegion(region17, "kinesis", "kinesis.us-east-2.amazonaws.com", false, true);
        updateRegion(region17, "kms", "kms.us-east-2.amazonaws.com", false, true);
        updateRegion(region17, "lambda", "lambda.us-east-2.amazonaws.com", false, true);
        updateRegion(region17, "logs", "logs.us-east-2.amazonaws.com", false, true);
        updateRegion(region17, "polly", "polly.us-east-2.amazonaws.com", false, true);
        updateRegion(region17, "s3", "s3.us-east-2.amazonaws.com", false, true);
        updateRegion(region17, ServiceAbbreviations.SNS, "sns.us-east-2.amazonaws.com", false, true);
        updateRegion(region17, ServiceAbbreviations.SQS, "sqs.us-east-2.amazonaws.com", false, true);
        updateRegion(region17, ServiceAbbreviations.STS, "sts.us-east-2.amazonaws.com", false, true);
        Region region18 = new Region("us-west-1", "amazonaws.com");
        arrayList.add(region18);
        updateRegion(region18, ServiceAbbreviations.Autoscaling, "autoscaling.us-west-1.amazonaws.com", false, true);
        updateRegion(region18, ServiceAbbreviations.Dynamodb, "dynamodb.us-west-1.amazonaws.com", false, true);
        updateRegion(region18, ServiceAbbreviations.EC2, "ec2.us-west-1.amazonaws.com", false, true);
        updateRegion(region18, ServiceAbbreviations.ElasticLoadbalancing, "elasticloadbalancing.us-west-1.amazonaws.com", false, true);
        updateRegion(region18, "kinesis", "kinesis.us-west-1.amazonaws.com", false, true);
        updateRegion(region18, "kms", "kms.us-west-1.amazonaws.com", false, true);
        updateRegion(region18, "lambda", "lambda.us-west-1.amazonaws.com", false, true);
        updateRegion(region18, "logs", "logs.us-west-1.amazonaws.com", false, true);
        updateRegion(region18, "polly", "polly.us-west-1.amazonaws.com", false, true);
        updateRegion(region18, "s3", "s3.us-west-1.amazonaws.com", false, true);
        updateRegion(region18, ServiceAbbreviations.SimpleDB, "sdb.us-west-1.amazonaws.com", false, true);
        updateRegion(region18, ServiceAbbreviations.SNS, "sns.us-west-1.amazonaws.com", false, true);
        updateRegion(region18, ServiceAbbreviations.SQS, "sqs.us-west-1.amazonaws.com", false, true);
        updateRegion(region18, ServiceAbbreviations.STS, "sts.us-west-1.amazonaws.com", false, true);
        Region region19 = new Region("us-west-2", "amazonaws.com");
        arrayList.add(region19);
        updateRegion(region19, ServiceAbbreviations.Autoscaling, "autoscaling.us-west-2.amazonaws.com", false, true);
        updateRegion(region19, "cognito-identity", "cognito-identity.us-west-2.amazonaws.com", false, true);
        updateRegion(region19, "cognito-idp", "cognito-idp.us-west-2.amazonaws.com", false, true);
        updateRegion(region19, "cognito-sync", "cognito-sync.us-west-2.amazonaws.com", false, true);
        updateRegion(region19, "data.iot", "data.iot.us-west-2.amazonaws.com", false, true);
        updateRegion(region19, ServiceAbbreviations.Dynamodb, "dynamodb.us-west-2.amazonaws.com", false, true);
        updateRegion(region19, ServiceAbbreviations.EC2, "ec2.us-west-2.amazonaws.com", false, true);
        updateRegion(region19, ServiceAbbreviations.ElasticLoadbalancing, "elasticloadbalancing.us-west-2.amazonaws.com", false, true);
        updateRegion(region19, "email", "email.us-west-2.amazonaws.com", false, true);
        updateRegion(region19, "firehose", "firehose.us-west-2.amazonaws.com", false, true);
        updateRegion(region19, "iot", "iot.us-west-2.amazonaws.com", false, true);
        updateRegion(region19, "kinesis", "kinesis.us-west-2.amazonaws.com", false, true);
        updateRegion(region19, "kms", "kms.us-west-2.amazonaws.com", false, true);
        updateRegion(region19, "lambda", "lambda.us-west-2.amazonaws.com", false, true);
        updateRegion(region19, "logs", "logs.us-west-2.amazonaws.com", false, true);
        updateRegion(region19, "polly", "polly.us-west-2.amazonaws.com", false, true);
        updateRegion(region19, "rekognition", "rekognition.us-west-2.amazonaws.com", false, true);
        updateRegion(region19, "s3", "s3.us-west-2.amazonaws.com", false, true);
        updateRegion(region19, ServiceAbbreviations.SimpleDB, "sdb.us-west-2.amazonaws.com", false, true);
        updateRegion(region19, ServiceAbbreviations.SNS, "sns.us-west-2.amazonaws.com", false, true);
        updateRegion(region19, ServiceAbbreviations.SQS, "sqs.us-west-2.amazonaws.com", false, true);
        updateRegion(region19, ServiceAbbreviations.STS, "sts.us-west-2.amazonaws.com", false, true);
        Region region20 = new Region("cn-north-1", "amazonaws.com.cn");
        arrayList.add(region20);
        updateRegion(region20, ServiceAbbreviations.Autoscaling, "autoscaling.cn-north-1.amazonaws.com.cn", false, true);
        updateRegion(region20, "cognito-identity", "cognito-identity.cn-north-1.amazonaws.com.cn", false, true);
        updateRegion(region20, ServiceAbbreviations.Dynamodb, "dynamodb.cn-north-1.amazonaws.com.cn", false, true);
        updateRegion(region20, ServiceAbbreviations.EC2, "ec2.cn-north-1.amazonaws.com.cn", false, true);
        updateRegion(region20, ServiceAbbreviations.ElasticLoadbalancing, "elasticloadbalancing.cn-north-1.amazonaws.com.cn", false, true);
        updateRegion(region20, "iot", "iot.cn-north-1.amazonaws.com.cn", false, true);
        updateRegion(region20, "kinesis", "kinesis.cn-north-1.amazonaws.com.cn", false, true);
        updateRegion(region20, "lambda", "lambda.cn-north-1.amazonaws.com.cn", false, true);
        updateRegion(region20, "logs", "logs.cn-north-1.amazonaws.com.cn", false, true);
        updateRegion(region20, "s3", "s3.cn-north-1.amazonaws.com.cn", false, true);
        updateRegion(region20, ServiceAbbreviations.SNS, "sns.cn-north-1.amazonaws.com.cn", false, true);
        updateRegion(region20, ServiceAbbreviations.SQS, "sqs.cn-north-1.amazonaws.com.cn", false, true);
        updateRegion(region20, ServiceAbbreviations.STS, "sts.cn-north-1.amazonaws.com.cn", false, true);
        Region region21 = new Region("cn-northwest-1", "amazonaws.com.cn");
        arrayList.add(region21);
        updateRegion(region21, ServiceAbbreviations.Autoscaling, "autoscaling.cn-northwest-1.amazonaws.com.cn", false, true);
        updateRegion(region21, ServiceAbbreviations.Dynamodb, "dynamodb.cn-northwest-1.amazonaws.com.cn", false, true);
        updateRegion(region21, ServiceAbbreviations.EC2, "ec2.cn-northwest-1.amazonaws.com.cn", false, true);
        updateRegion(region21, ServiceAbbreviations.ElasticLoadbalancing, "elasticloadbalancing.cn-northwest-1.amazonaws.com.cn", false, true);
        updateRegion(region21, "kinesis", "kinesis.cn-northwest-1.amazonaws.com.cn", false, true);
        updateRegion(region21, "logs", "logs.cn-northwest-1.amazonaws.com.cn", false, true);
        updateRegion(region21, "s3", "s3.cn-northwest-1.amazonaws.com.cn", false, true);
        updateRegion(region21, ServiceAbbreviations.SNS, "sns.cn-northwest-1.amazonaws.com.cn", false, true);
        updateRegion(region21, ServiceAbbreviations.SQS, "sqs.cn-northwest-1.amazonaws.com.cn", false, true);
        updateRegion(region21, ServiceAbbreviations.STS, "sts.cn-northwest-1.amazonaws.com.cn", false, true);
        Region region22 = new Region("us-gov-west-1", "amazonaws.com");
        arrayList.add(region22);
        updateRegion(region22, ServiceAbbreviations.Autoscaling, "autoscaling.us-gov-west-1.amazonaws.com", false, true);
        updateRegion(region22, ServiceAbbreviations.Dynamodb, "dynamodb.us-gov-west-1.amazonaws.com", false, true);
        updateRegion(region22, ServiceAbbreviations.EC2, "ec2.us-gov-west-1.amazonaws.com", false, true);
        updateRegion(region22, ServiceAbbreviations.ElasticLoadbalancing, "elasticloadbalancing.us-gov-west-1.amazonaws.com", false, true);
        updateRegion(region22, "kinesis", "kinesis.us-gov-west-1.amazonaws.com", false, true);
        updateRegion(region22, "kms", "kms.us-gov-west-1.amazonaws.com", false, true);
        updateRegion(region22, "lambda", "lambda.us-gov-west-1.amazonaws.com", false, true);
        updateRegion(region22, "logs", "logs.us-gov-west-1.amazonaws.com", false, true);
        updateRegion(region22, "rekognition", "rekognition.us-gov-west-1.amazonaws.com", false, true);
        updateRegion(region22, "s3", "s3.us-gov-west-1.amazonaws.com", false, true);
        updateRegion(region22, ServiceAbbreviations.SNS, "sns.us-gov-west-1.amazonaws.com", false, true);
        updateRegion(region22, ServiceAbbreviations.SQS, "sqs.us-gov-west-1.amazonaws.com", false, true);
        updateRegion(region22, ServiceAbbreviations.STS, "sts.us-gov-west-1.amazonaws.com", false, true);
        Region region23 = new Region("us-gov-east-1", "amazonaws.com");
        arrayList.add(region23);
        updateRegion(region23, ServiceAbbreviations.Autoscaling, "autoscaling.us-gov-east-1.amazonaws.com", false, true);
        updateRegion(region23, ServiceAbbreviations.Dynamodb, "dynamodb.us-gov-east-1.amazonaws.com", false, true);
        updateRegion(region23, ServiceAbbreviations.EC2, "ec2.us-gov-east-1.amazonaws.com", false, true);
        updateRegion(region23, ServiceAbbreviations.ElasticLoadbalancing, "elasticloadbalancing.us-gov-east-1.amazonaws.com", false, true);
        updateRegion(region23, "kinesis", "kinesis.us-gov-east-1.amazonaws.com", false, true);
        updateRegion(region23, "kms", "kms.us-gov-east-1.amazonaws.com", false, true);
        updateRegion(region23, "lambda", "lambda.us-gov-east-1.amazonaws.com", false, true);
        updateRegion(region23, "logs", "logs.us-gov-east-1.amazonaws.com", false, true);
        updateRegion(region23, "rekognition", "rekognition.us-gov-east-1.amazonaws.com", false, true);
        updateRegion(region23, "s3", "s3.us-gov-east-1.amazonaws.com", false, true);
        updateRegion(region23, ServiceAbbreviations.SNS, "sns.us-gov-east-1.amazonaws.com", false, true);
        updateRegion(region23, ServiceAbbreviations.SQS, "sqs.us-gov-east-1.amazonaws.com", false, true);
        updateRegion(region23, ServiceAbbreviations.STS, "sts.us-gov-east-1.amazonaws.com", false, true);
        Region region24 = new Region("eu-north-1", "amazonaws.com");
        arrayList.add(region24);
        updateRegion(region24, ServiceAbbreviations.Autoscaling, "autoscaling.eu-north-1.amazonaws.com", false, true);
        updateRegion(region24, ServiceAbbreviations.Dynamodb, "dynamodb.eu-north-1.amazonaws.com", false, true);
        updateRegion(region24, ServiceAbbreviations.EC2, "ec2.eu-north-1.amazonaws.com", false, true);
        updateRegion(region24, ServiceAbbreviations.ElasticLoadbalancing, "elasticloadbalancing.eu-north-1.amazonaws.com", false, true);
        updateRegion(region24, "firehose", "firehose.eu-north-1.amazonaws.com", false, true);
        updateRegion(region24, "iot", "iot.eu-north-1.amazonaws.com", false, true);
        updateRegion(region24, "kinesis", "kinesis.eu-north-1.amazonaws.com", false, true);
        updateRegion(region24, "kms", "kms.eu-north-1.amazonaws.com", false, true);
        updateRegion(region24, "lambda", "lambda.eu-north-1.amazonaws.com", false, true);
        updateRegion(region24, "logs", "logs.eu-north-1.amazonaws.com", false, true);
        updateRegion(region24, "s3", "s3.eu-north-1.amazonaws.com", false, true);
        updateRegion(region24, ServiceAbbreviations.SNS, "sns.eu-north-1.amazonaws.com", false, true);
        updateRegion(region24, ServiceAbbreviations.SQS, "sqs.eu-north-1.amazonaws.com", false, true);
        updateRegion(region24, ServiceAbbreviations.STS, "sts.eu-north-1.amazonaws.com", false, true);
        Region region25 = new Region("ap-east-1", "amazonaws.com");
        arrayList.add(region25);
        updateRegion(region25, ServiceAbbreviations.Autoscaling, "autoscaling.ap-east-1.amazonaws.com", false, true);
        updateRegion(region25, ServiceAbbreviations.Dynamodb, "dynamodb.ap-east-1.amazonaws.com", false, true);
        updateRegion(region25, ServiceAbbreviations.EC2, "ec2.ap-east-1.amazonaws.com", false, true);
        updateRegion(region25, ServiceAbbreviations.ElasticLoadbalancing, "elasticloadbalancing.ap-east-1.amazonaws.com", false, true);
        updateRegion(region25, "firehose", "firehose.ap-east-1.amazonaws.com", false, true);
        updateRegion(region25, "kinesis", "kinesis.ap-east-1.amazonaws.com", false, true);
        updateRegion(region25, "kms", "kms.ap-east-1.amazonaws.com", false, true);
        updateRegion(region25, "lambda", "lambda.ap-east-1.amazonaws.com", false, true);
        updateRegion(region25, "logs", "logs.ap-east-1.amazonaws.com", false, true);
        updateRegion(region25, "polly", "polly.ap-east-1.amazonaws.com", false, true);
        updateRegion(region25, "s3", "s3.ap-east-1.amazonaws.com", false, true);
        updateRegion(region25, ServiceAbbreviations.SNS, "sns.ap-east-1.amazonaws.com", false, true);
        updateRegion(region25, ServiceAbbreviations.SQS, "sqs.ap-east-1.amazonaws.com", false, true);
        updateRegion(region25, ServiceAbbreviations.STS, "sts.ap-east-1.amazonaws.com", false, true);
        Region region26 = new Region("me-south-1", "amazonaws.com");
        arrayList.add(region26);
        updateRegion(region26, ServiceAbbreviations.Autoscaling, "autoscaling.me-south-1.amazonaws.com", false, true);
        updateRegion(region26, "cognito-identity", "cognito-identity.me-south-1.amazonaws.com", false, true);
        updateRegion(region26, "cognito-idp", "cognito-idp.me-south-1.amazonaws.com", false, true);
        updateRegion(region26, "cognito-sync", "cognito-sync.me-south-1.amazonaws.com", false, true);
        updateRegion(region26, "data.iot", "data.iot.me-south-1.amazonaws.com", false, true);
        updateRegion(region26, ServiceAbbreviations.Dynamodb, "dynamodb.me-south-1.amazonaws.com", false, true);
        updateRegion(region26, ServiceAbbreviations.EC2, "ec2.me-south-1.amazonaws.com", false, true);
        updateRegion(region26, ServiceAbbreviations.ElasticLoadbalancing, "elasticloadbalancing.me-south-1.amazonaws.com", false, true);
        updateRegion(region26, "firehose", "firehose.me-south-1.amazonaws.com", false, true);
        updateRegion(region26, "iot", "iot.me-south-1.amazonaws.com", false, true);
        updateRegion(region26, "kinesis", "kinesis.me-south-1.amazonaws.com", false, true);
        updateRegion(region26, "kms", "kms.me-south-1.amazonaws.com", false, true);
        updateRegion(region26, "lambda", "lambda.me-south-1.amazonaws.com", false, true);
        updateRegion(region26, "logs", "logs.me-south-1.amazonaws.com", false, true);
        updateRegion(region26, "polly", "polly.me-south-1.amazonaws.com", false, true);
        updateRegion(region26, "s3", "s3.me-south-1.amazonaws.com", false, true);
        updateRegion(region26, ServiceAbbreviations.SimpleDB, "sdb.me-south-1.amazonaws.com", false, true);
        updateRegion(region26, ServiceAbbreviations.SNS, "sns.me-south-1.amazonaws.com", false, true);
        updateRegion(region26, ServiceAbbreviations.SQS, "sqs.me-south-1.amazonaws.com", false, true);
        updateRegion(region26, ServiceAbbreviations.STS, "sts.me-south-1.amazonaws.com", false, true);
        Region region27 = new Region("ap-southeast-3", "amazonaws.com");
        arrayList.add(region27);
        updateRegion(region27, ServiceAbbreviations.Autoscaling, "autoscaling.ap-southeast-3.amazonaws.com", false, true);
        updateRegion(region27, "cognito-identity", "cognito-identity.ap-southeast-3.amazonaws.com", false, true);
        updateRegion(region27, "cognito-idp", "cognito-idp.ap-southeast-3.amazonaws.com", false, true);
        updateRegion(region27, "cognito-sync", "cognito-sync.ap-southeast-3.amazonaws.com", false, true);
        updateRegion(region27, "data.iot", "data.iot.ap-southeast-3.amazonaws.com", false, true);
        updateRegion(region27, ServiceAbbreviations.Dynamodb, "dynamodb.ap-southeast-3.amazonaws.com", false, true);
        updateRegion(region27, ServiceAbbreviations.EC2, "ec2.ap-southeast-3.amazonaws.com", false, true);
        updateRegion(region27, ServiceAbbreviations.ElasticLoadbalancing, "elasticloadbalancing.ap-southeast-3.amazonaws.com", false, true);
        updateRegion(region27, "firehose", "firehose.ap-southeast-3.amazonaws.com", false, true);
        updateRegion(region27, "iot", "iot.ap-southeast-3.amazonaws.com", false, true);
        updateRegion(region27, "kinesis", "kinesis.ap-southeast-3.amazonaws.com", false, true);
        updateRegion(region27, "kms", "kms.ap-southeast-3.amazonaws.com", false, true);
        updateRegion(region27, "lambda", "lambda.ap-southeast-3.amazonaws.com", false, true);
        updateRegion(region27, "logs", "logs.ap-southeast-3.amazonaws.com", false, true);
        updateRegion(region27, "polly", "polly.ap-southeast-3.amazonaws.com", false, true);
        updateRegion(region27, "s3", "s3.ap-southeast-3.amazonaws.com", false, true);
        updateRegion(region27, ServiceAbbreviations.SimpleDB, "sdb.ap-southeast-3.amazonaws.com", false, true);
        updateRegion(region27, ServiceAbbreviations.SNS, "sns.ap-southeast-3.amazonaws.com", false, true);
        updateRegion(region27, ServiceAbbreviations.SQS, "sqs.ap-southeast-3.amazonaws.com", false, true);
        updateRegion(region27, ServiceAbbreviations.STS, "sts.ap-southeast-3.amazonaws.com", false, true);
        Region region28 = new Region("me-central-1", "amazonaws.com");
        arrayList.add(region28);
        updateRegion(region28, ServiceAbbreviations.Autoscaling, "autoscaling.me-central-1.amazonaws.com", false, true);
        updateRegion(region28, "cognito-identity", "cognito-identity.me-central-1.amazonaws.com", false, true);
        updateRegion(region28, "cognito-idp", "cognito-idp.me-central-1.amazonaws.com", false, true);
        updateRegion(region28, "cognito-sync", "cognito-sync.me-central-1.amazonaws.com", false, true);
        updateRegion(region28, "data.iot", "data.iot.me-central-1.amazonaws.com", false, true);
        updateRegion(region28, ServiceAbbreviations.Dynamodb, "dynamodb.me-central-1.amazonaws.com", false, true);
        updateRegion(region28, ServiceAbbreviations.EC2, "ec2.me-central-1.amazonaws.com", false, true);
        updateRegion(region28, ServiceAbbreviations.ElasticLoadbalancing, "elasticloadbalancing.me-central-1.amazonaws.com", false, true);
        updateRegion(region28, "firehose", "firehose.me-central-1.amazonaws.com", false, true);
        updateRegion(region28, "iot", "iot.me-central-1.amazonaws.com", false, true);
        updateRegion(region28, "kinesis", "kinesis.me-central-1.amazonaws.com", false, true);
        updateRegion(region28, "kms", "kms.me-central-1.amazonaws.com", false, true);
        updateRegion(region28, "lambda", "lambda.me-central-1.amazonaws.com", false, true);
        updateRegion(region28, "logs", "logs.me-central-1.amazonaws.com", false, true);
        updateRegion(region28, "polly", "polly.me-central-1.amazonaws.com", false, true);
        updateRegion(region28, "s3", "s3.me-central-1.amazonaws.com", false, true);
        updateRegion(region28, ServiceAbbreviations.SimpleDB, "sdb.me-central-1.amazonaws.com", false, true);
        updateRegion(region28, ServiceAbbreviations.SNS, "sns.me-central-1.amazonaws.com", false, true);
        updateRegion(region28, ServiceAbbreviations.SQS, "sqs.me-central-1.amazonaws.com", false, true);
        updateRegion(region28, ServiceAbbreviations.STS, "sts.me-central-1.amazonaws.com", false, true);
        Region region29 = new Region("ap-south-2", "amazonaws.com");
        arrayList.add(region29);
        updateRegion(region29, ServiceAbbreviations.Autoscaling, "autoscaling.ap-south-2.amazonaws.com", false, true);
        updateRegion(region29, "cognito-identity", "cognito-identity.ap-south-2.amazonaws.com", false, true);
        updateRegion(region29, "cognito-idp", "cognito-idp.ap-south-2.amazonaws.com", false, true);
        updateRegion(region29, "cognito-sync", "cognito-sync.ap-south-2.amazonaws.com", false, true);
        updateRegion(region29, "data.iot", "data.iot.ap-south-2.amazonaws.com", false, true);
        updateRegion(region29, ServiceAbbreviations.Dynamodb, "dynamodb.ap-south-2.amazonaws.com", false, true);
        updateRegion(region29, ServiceAbbreviations.EC2, "ec2.ap-south-2.amazonaws.com", false, true);
        updateRegion(region29, ServiceAbbreviations.ElasticLoadbalancing, "elasticloadbalancing.ap-south-2.amazonaws.com", false, true);
        updateRegion(region29, "firehose", "firehose.ap-south-2.amazonaws.com", false, true);
        updateRegion(region29, "iot", "iot.ap-south-2.amazonaws.com", false, true);
        updateRegion(region29, "kinesis", "kinesis.ap-south-2.amazonaws.com", false, true);
        updateRegion(region29, "kms", "kms.ap-south-2.amazonaws.com", false, true);
        updateRegion(region29, "lambda", "lambda.ap-south-2.amazonaws.com", false, true);
        updateRegion(region29, "logs", "logs.ap-south-2.amazonaws.com", false, true);
        updateRegion(region29, "polly", "polly.ap-south-2.amazonaws.com", false, true);
        updateRegion(region29, "s3", "s3.ap-south-2.amazonaws.com", false, true);
        updateRegion(region29, ServiceAbbreviations.SimpleDB, "sdb.ap-south-2.amazonaws.com", false, true);
        updateRegion(region29, ServiceAbbreviations.SNS, "sns.ap-south-2.amazonaws.com", false, true);
        updateRegion(region29, ServiceAbbreviations.SQS, "sqs.ap-south-2.amazonaws.com", false, true);
        updateRegion(region29, ServiceAbbreviations.STS, "sts.ap-south-2.amazonaws.com", false, true);
        Region region30 = new Region("ap-southeast-4", "amazonaws.com");
        arrayList.add(region30);
        updateRegion(region30, ServiceAbbreviations.Autoscaling, "autoscaling.ap-southeast-4.amazonaws.com", false, true);
        updateRegion(region30, "cognito-identity", "cognito-identity.ap-southeast-4.amazonaws.com", false, true);
        updateRegion(region30, "cognito-idp", "cognito-idp.ap-southeast-4.amazonaws.com", false, true);
        updateRegion(region30, "cognito-sync", "cognito-sync.ap-southeast-4.amazonaws.com", false, true);
        updateRegion(region30, "data.iot", "data.iot.ap-southeast-4.amazonaws.com", false, true);
        updateRegion(region30, ServiceAbbreviations.Dynamodb, "dynamodb.ap-southeast-4.amazonaws.com", false, true);
        updateRegion(region30, ServiceAbbreviations.EC2, "ec2.ap-southeast-4.amazonaws.com", false, true);
        updateRegion(region30, ServiceAbbreviations.ElasticLoadbalancing, "elasticloadbalancing.ap-southeast-4.amazonaws.com", false, true);
        updateRegion(region30, "firehose", "firehose.ap-southeast-4.amazonaws.com", false, true);
        updateRegion(region30, "iot", "iot.ap-southeast-4.amazonaws.com", false, true);
        updateRegion(region30, "kinesis", "kinesis.ap-southeast-4.amazonaws.com", false, true);
        updateRegion(region30, "kms", "kms.ap-southeast-4.amazonaws.com", false, true);
        updateRegion(region30, "lambda", "lambda.ap-southeast-4.amazonaws.com", false, true);
        updateRegion(region30, "logs", "logs.ap-southeast-4.amazonaws.com", false, true);
        updateRegion(region30, "polly", "polly.ap-southeast-4.amazonaws.com", false, true);
        updateRegion(region30, "s3", "s3.ap-southeast-4.amazonaws.com", false, true);
        updateRegion(region30, ServiceAbbreviations.SimpleDB, "sdb.ap-southeast-4.amazonaws.com", false, true);
        updateRegion(region30, ServiceAbbreviations.SNS, "sns.ap-southeast-4.amazonaws.com", false, true);
        updateRegion(region30, ServiceAbbreviations.SQS, "sqs.ap-southeast-4.amazonaws.com", false, true);
        updateRegion(region30, ServiceAbbreviations.STS, "sts.ap-southeast-4.amazonaws.com", false, true);
        Region region31 = new Region("il-central-1", "amazonaws.com");
        arrayList.add(region31);
        updateRegion(region31, ServiceAbbreviations.Autoscaling, "autoscaling.il-central-1.amazonaws.com", false, true);
        updateRegion(region31, "cognito-identity", "cognito-identity.il-central-1.amazonaws.com", false, true);
        updateRegion(region31, "cognito-idp", "cognito-idp.il-central-1.amazonaws.com", false, true);
        updateRegion(region31, "cognito-sync", "cognito-sync.il-central-1.amazonaws.com", false, true);
        updateRegion(region31, "data.iot", "data.iot.il-central-1.amazonaws.com", false, true);
        updateRegion(region31, ServiceAbbreviations.Dynamodb, "dynamodb.il-central-1.amazonaws.com", false, true);
        updateRegion(region31, ServiceAbbreviations.EC2, "ec2.il-central-1.amazonaws.com", false, true);
        updateRegion(region31, ServiceAbbreviations.ElasticLoadbalancing, "elasticloadbalancing.il-central-1.amazonaws.com", false, true);
        updateRegion(region31, "firehose", "firehose.il-central-1.amazonaws.com", false, true);
        updateRegion(region31, "iot", "iot.il-central-1.amazonaws.com", false, true);
        updateRegion(region31, "kinesis", "kinesis.il-central-1.amazonaws.com", false, true);
        updateRegion(region31, "kms", "kms.il-central-1.amazonaws.com", false, true);
        updateRegion(region31, "lambda", "lambda.il-central-1.amazonaws.com", false, true);
        updateRegion(region31, "logs", "logs.il-central-1.amazonaws.com", false, true);
        updateRegion(region31, "polly", "polly.il-central-1.amazonaws.com", false, true);
        updateRegion(region31, "s3", "s3.il-central-1.amazonaws.com", false, true);
        updateRegion(region31, ServiceAbbreviations.SimpleDB, "sdb.il-central-1.amazonaws.com", false, true);
        updateRegion(region31, ServiceAbbreviations.SNS, "sns.il-central-1.amazonaws.com", false, true);
        updateRegion(region31, ServiceAbbreviations.SQS, "sqs.il-central-1.amazonaws.com", false, true);
        updateRegion(region31, ServiceAbbreviations.STS, "sts.il-central-1.amazonaws.com", false, true);
        Region region32 = new Region("ca-west-1", "amazonaws.com");
        arrayList.add(region32);
        updateRegion(region32, ServiceAbbreviations.Autoscaling, "autoscaling.ca-west-1.amazonaws.com", false, true);
        updateRegion(region32, "cognito-identity", "cognito-identity.ca-west-1.amazonaws.com", false, true);
        updateRegion(region32, "cognito-idp", "cognito-idp.ca-west-1.amazonaws.com", false, true);
        updateRegion(region32, "cognito-sync", "cognito-sync.ca-west-1.amazonaws.com", false, true);
        updateRegion(region32, "data.iot", "data.iot.ca-west-1.amazonaws.com", false, true);
        updateRegion(region32, ServiceAbbreviations.Dynamodb, "dynamodb.ca-west-1.amazonaws.com", false, true);
        updateRegion(region32, ServiceAbbreviations.EC2, "ec2.ca-west-1.amazonaws.com", false, true);
        updateRegion(region32, ServiceAbbreviations.ElasticLoadbalancing, "elasticloadbalancing.ca-west-1.amazonaws.com", false, true);
        updateRegion(region32, "firehose", "firehose.ca-west-1.amazonaws.com", false, true);
        updateRegion(region32, "iot", "iot.ca-west-1.amazonaws.com", false, true);
        updateRegion(region32, "kinesis", "kinesis.ca-west-1.amazonaws.com", false, true);
        updateRegion(region32, "kms", "kms.ca-west-1.amazonaws.com", false, true);
        updateRegion(region32, "lambda", "lambda.ca-west-1.amazonaws.com", false, true);
        updateRegion(region32, "logs", "logs.ca-west-1.amazonaws.com", false, true);
        updateRegion(region32, "polly", "polly.ca-west-1.amazonaws.com", false, true);
        updateRegion(region32, "s3", "s3.ca-west-1.amazonaws.com", false, true);
        updateRegion(region32, ServiceAbbreviations.SimpleDB, "sdb.ca-west-1.amazonaws.com", false, true);
        updateRegion(region32, ServiceAbbreviations.SNS, "sns.ca-west-1.amazonaws.com", false, true);
        updateRegion(region32, ServiceAbbreviations.SQS, "sqs.ca-west-1.amazonaws.com", false, true);
        updateRegion(region32, ServiceAbbreviations.STS, "sts.ca-west-1.amazonaws.com", false, true);
        return arrayList;
    }

    private static void updateRegion(Region region, String str, String str2, boolean z, boolean z2) {
        Map<String, String> serviceEndpoints = region.getServiceEndpoints();
        Map<String, Boolean> httpSupport = region.getHttpSupport();
        Map<String, Boolean> httpsSupport = region.getHttpsSupport();
        serviceEndpoints.put(str, str2);
        httpSupport.put(str, Boolean.valueOf(z));
        httpsSupport.put(str, Boolean.valueOf(z2));
    }
}
